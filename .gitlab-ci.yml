stages:
   - flake8
   - build
   - tests
   - release

default:
   tags:
      - docker

variables:
   CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:dev-$CI_COMMIT_REF_SLUG
   CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest

flake8:
   stage: flake8
   image: pipelinecomponents/flake8:latest
   script:
      - flake8 --verbose .

docker_image:
   image: docker:latest
   stage: build
   tags:
      - kutta
   script:
      - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
      - docker build --no-cache --pull --build-arg DOLFINX_BUILD_TYPE=Release -t $CONTAINER_TEST_IMAGE .
      - docker push $CONTAINER_TEST_IMAGE

kommendant:
   image: $CONTAINER_TEST_IMAGE
   stage: tests
   tags:
      - kutta
   script:
      - pip3 install .
      - cd test/cylinder_creep
      - ./kommendant.sh 8
   artifacts:
      paths:
      - test/cylinder_creep/*.pdf
      - test/cylinder_creep/*.log
      - test/cylinder_creep/*.xdmf
      - test/cylinder_creep/*.h5
      expire_in: 3 week

eigval:
   image: $CONTAINER_TEST_IMAGE
   stage: tests
   tags:
      - kutta
   script:
      - pip3 install .
      - cd test/eigval
      - python3 eig.py
      - python3 eigproj.py

cantilever:
   image: $CONTAINER_TEST_IMAGE
   stage: tests
   tags:
      - kutta
   script:
      - pip3 install .
      - cd test/cantilever
      - ./beam.sh 8
   artifacts:
      paths:
      - test/cantilever/*.pdf

3point_notched:
   image: $CONTAINER_TEST_IMAGE
   stage: tests
   tags:
      - kutta
   script:
      - pip3 install .
      - cd test/3point_notched
      - rm -Rf /root/.cache/fenics
      - ./mesh.sh 0.008
      - mpirun -n 8 ./s1.sh
   artifacts:
      paths:
      - test/3point_notched/*.log

docker_latest:
   image: docker:latest
   stage: release
   tags:
      - kutta
   script:
      - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
      - docker pull $CONTAINER_TEST_IMAGE
      - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_RELEASE_IMAGE
      - docker push $CONTAINER_RELEASE_IMAGE
   only:
      - master
